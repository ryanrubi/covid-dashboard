{"version":3,"file":"static/js/12.906b35f3.chunk.js","mappings":"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","sources":["components/manageDashboard/manage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { SettingsActions } from \"../../store\";\r\nimport \"./manage.css\";\r\n\r\nconst ManageDashboard = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const widgets = useSelector(state => state.settings.widgets);\r\n    let selectedCountry = localStorage.country.toString();\r\n    const [msg, setMsg] = useState(false);\r\n    const objData = [];\r\n\r\n    if(props.data.countries !== 0){\r\n        Object.keys(props.data.countries).forEach( i => {\r\n            objData.push(props.data.countries[i]);\r\n        });\r\n    }else {\r\n        objData.push({\r\n            Country: \"No Available Country\"\r\n        });\r\n    }\r\n\r\n    const countries = objData.map(index => {\r\n        return index.Country;\r\n    });\r\n\r\n    const save = () => {\r\n        let marquee = document.getElementById(\"marquee\");\r\n        let calendar = document.getElementById(\"calendar\");\r\n        let confirmed = document.getElementById(\"confirmed\");\r\n        let deaths = document.getElementById(\"deaths\");\r\n        let recovered = document.getElementById(\"recovered\");\r\n        let bar_chart = document.getElementById(\"bar_chart\");\r\n        let pie_chart = document.getElementById(\"pie_chart\");\r\n        let countries = document.getElementById(\"countries\");\r\n        let contry = document.getElementById(\"select\").value;\r\n        \r\n        dispatch(SettingsActions.widgetsSettings({\r\n            marquee: marquee.checked === true ? true : false,\r\n            calendar: calendar.checked === true ? true : false,\r\n            confirmed: confirmed.checked === true ? true : false,\r\n            deaths: deaths.checked === true ? true : false,\r\n            recovered: recovered.checked === true ? true : false,\r\n            bar_chart: bar_chart.checked === true ? true : false,\r\n            pie_chart: pie_chart.checked === true ? true : false,\r\n            countries: countries.checked === true ? true : false\r\n        }));\r\n\r\n        localStorage.setItem(\"country\", contry);\r\n\r\n        setMsg(true);\r\n    };\r\n\r\n    const onChangeHandler = () => setMsg(false);\r\n\r\n    useEffect(() => {\r\n        let select = document.getElementById(\"select\");\r\n        select.value = selectedCountry;\r\n\r\n        for (const [key, value] of Object.entries(widgets)) {\r\n            document.getElementById(key).checked = value;\r\n        }\r\n    });\r\n\r\n    return(\r\n        <div className=\"manage-container\">\r\n            {/* TITLE */}\r\n            <div className={props.theme.toString() === \"dark\" ? \"title dm-title-container\" : \"title lm-title-container\"}>\r\n                <h3 className={props.theme.toString() === \"dark\" ? \"dm-title\" : \"lm-title\"}>Manage Dashboard</h3>\r\n            </div>\r\n\r\n            {/* TABLE */}\r\n            <div className={props.theme.toString() === \"dark\" ? \"tbl-container dm-table-container\" : \"tbl-container lm-table-container\"}>\r\n                <table className={props.theme.toString() === \"dark\" ? \"dm-table\" : \"lm-table\"}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th className={props.theme.toString() === \"dark\" ? \"dm-th\" : \"lm-th\"}>Widgets</th>\r\n                            <th className={props.theme.toString() === \"dark\" ? \"dm-th\" : \"lm-th\"}></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Marquee</td>\r\n                            <td><input type=\"checkbox\" id=\"marquee\" onChange={onChangeHandler}/> Marquee</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td>Grid</td>\r\n                            <td>\r\n                                <input type=\"checkbox\" id=\"calendar\" onChange={onChangeHandler}/> Calendar &nbsp;&nbsp;&nbsp;\r\n                                <input type=\"checkbox\" id=\"confirmed\" onChange={onChangeHandler}/> New Confirmed &nbsp;&nbsp;&nbsp;\r\n                                <input type=\"checkbox\" id=\"deaths\" onChange={onChangeHandler}/> New Deaths &nbsp;&nbsp;&nbsp;\r\n                                <input type=\"checkbox\" id=\"recovered\" onChange={onChangeHandler}/> New Recovered &nbsp;&nbsp;&nbsp;\r\n                            </td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td>Bar Chart</td>\r\n                            <td><input type=\"checkbox\" id=\"bar_chart\" onChange={onChangeHandler}/> Bar Chart</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td>Pie Chart</td>\r\n                            <td>\r\n                                <input type=\"checkbox\" id=\"pie_chart\" onChange={onChangeHandler}/> Pie Chart &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                <select className={props.theme.toString() === \"dark\" ? \"dm-select\" : \"lm-select\"} onClick={onChangeHandler} id=\"select\">\r\n                                    {countries.map( i => {\r\n                                        if(i === \"No Available Country\"){\r\n                                            return <option key={i} value=\"Philippines\">{i}</option>;\r\n                                        }else {\r\n                                            return <option key={i} value={i}>{i}</option>;\r\n                                        }\r\n                                    })}\r\n                                </select>\r\n                            </td>\r\n                        </tr>\r\n            \r\n                        <tr>\r\n                            <td>Countries Table</td>\r\n                            <td><input type=\"checkbox\" id=\"countries\" onChange={onChangeHandler}/> Countries Table</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <button onClick={save}>SAVE</button>\r\n            </div>\r\n\r\n            {msg && <div className=\"mssg-container\">\r\n                Save Successfully!\r\n            </div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManageDashboard;"],"names":["props","dispatch","useDispatch","widgets","useSelector","state","settings","selectedCountry","localStorage","country","toString","useState","msg","setMsg","objData","data","countries","Object","keys","forEach","i","push","Country","map","index","onChangeHandler","useEffect","document","getElementById","value","entries","key","checked","className","theme","type","id","onChange","onClick","marquee","calendar","confirmed","deaths","recovered","bar_chart","pie_chart","contry","SettingsActions","setItem"],"sourceRoot":""}